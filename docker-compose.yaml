services:
  cli:
    container_name: cli
    build: .
    tty: true
    volumes:
      - ./:/code
    environment:
      - ENVIRONMENT=${ENVIRONMENT}

  db-development:
    container_name: db-development
    image: postgres:16.1
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=db-development
      - PGPORT=54320
    volumes:
      - ./compose/db_development/db_development_data:/var/lib/postgresql/data
    ports:
      - "54320:54320"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB} -t 1" ]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 60s

  db-production:
    container_name: db-production
    image: postgres:16.1
    restart: unless-stopped
    environment:
      - POSTGRES_DB=db-production
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./compose/db_production/db_production_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB} -t 1" ]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 60s

  db-testing:
    container_name: db-testing
    image: postgres:16.1
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=db-testing
      - PGPORT=54321
    volumes:
      - ./compose/db_testing/db_testing_data:/var/lib/postgresql/data
    ports:
      - "54321:54321"
